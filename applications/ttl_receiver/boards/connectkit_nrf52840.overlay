/*
 * Copyright (c) 2016-2023 Makerdiary
 *
 * SPDX-License-Identifier: Apache-2.0
 */

// remove existing pwm LEDs dt configuration
/ {
	aliases {
		/delete-property/ sw0;
		/delete-property/ mcuboot-button0;
		/delete-property/ mcuboot-led0;

		/delete-property/ led0;
		/delete-property/ led1;
		/delete-property/ led2;
		/delete-property/ led3;
		/delete-property/ led0-green;
		/delete-property/ led1-red;
		/delete-property/ led1-green;
		/delete-property/ led1-blue;
		/delete-property/ pwm-led0;
		/delete-property/ pwm-led1;
		/delete-property/ pwm-led2;
		/delete-property/ pwm-led3;
		/delete-property/ red-pwm-led;
		/delete-property/ green-pwm-led;
		/delete-property/ blue-pwm-led;
	};
	/delete-node/ pwmleds;
	/delete-node/ buttons;
};

// create new configuration
/ {
	pwmleds {
		compatible = "pwm-leds";
		pwm_red: pwm_led0 {
			pwms = <&pwm0 0 PWM_SEC(1) PWM_POLARITY_NORMAL>;
		};
		pwm_yellow: pwm_led1 {
			pwms = <&pwm0 1 PWM_SEC(1) PWM_POLARITY_NORMAL>;
		};
		pwm_white: pwm_led2 {
			pwms = <&pwm0 2 PWM_SEC(1) PWM_POLARITY_NORMAL>;
		};
	};
};	

&pwm0_default {
	// use GPIO pins which are also available on the DONGLE
	group1 {
		psels = 
			<NRF_PSEL(PWM_OUT0, 0, 6)>, 
			<NRF_PSEL(PWM_OUT1, 0, 7)>,
			<NRF_PSEL(PWM_OUT2, 0, 8)>;
		
		// remove nordic,invert property,
		// otherwise the GPIO will be high if the PWM is disconnected
		/delete-property/ nordic,invert;
	};
};


/* 
 * ADXL345 on I2C
 * We use the alternative 7-bit I2C address: 0x53
 * Furthermore, we use the following pins for I2C
 *   - SCL: P0.22
 *   - SDA: P0.24
*/
&i2c0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_STANDARD>;
	accelerometer: adxl345@53 {
		compatible="adi,adxl345";
		reg=<0x53>;
		frequency=<100>;
		range=<16>;
		fifo=<0>;
		int1-gpios=<&gpio0 13 GPIO_ACTIVE_HIGH>;
	};
};

&i2c0_default {
	group1 {
		psels = <NRF_PSEL(TWIM_SCL, 0, 15)>,
				<NRF_PSEL(TWIM_SDA, 0, 16)>;
	};
};

/ {
		buttons {
		compatible = "gpio-keys";
		reboot_pin: reboot_pin {
			gpios = < &gpio0 13 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
			label = "Push button switch 0";
		};
	};
};

/ {
  chosen {
      zephyr,console = &cdc_acm_uart0;
  };
};

&zephyr_udc0 {
  cdc_acm_uart0: cdc_acm_uart0 {
      compatible = "zephyr,cdc-acm-uart";
  };
};

// use low power mode (PFM) of regulator
// change regulator GPIO polarity to active low (0 = active high, 1 = active low)
//&tps63802_force_pwm_mode {
//    enable-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
//};
